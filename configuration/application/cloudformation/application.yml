AWSTemplateFormatVersion: 2010-09-09
Description: Starter template for ECS

Parameters:
  VpcId:
    Type: String
    Description: Id of VPC stack to build off of
  VpcPublicSubnetAId:
    Type: String
    Description: Public subnet A id of VPC stack to build off of
  VpcPublicSubnetBId:
    Type: String
    Description: Public subnet B id of VPC stack to build off of
  EcsClusterStack:
    Type: String
    Description: Name of ECS Cluster stack to build off of
    Default: course-ecs-cluster
  Image:
    Type: String
    Description: URI of image
  Environment:
    Description: Specify the Environment of the stack.
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod

Resources:
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckPort: 8080
      HealthCheckProtocol: HTTP
      HealthCheckPath: /actuator/health
      HealthCheckIntervalSeconds: 60
      Port: 8080
      Protocol: HTTP
      TargetType: ip
      VpcId: !Ref VpcId

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Order: 1
          TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn:
        Fn::ImportValue: !Sub ${EcsClusterStack}-alb-arn
      Port: 8080
      Protocol: HTTP
    DependsOn:
      - TargetGroup

  FargateService:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Fn::ImportValue: !Sub ${EcsClusterStack}-ecs-cluster
      DeploymentController:
        Type: ECS
      DesiredCount: 1
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      ServiceName: course-api-gateway
      LoadBalancers:
        - ContainerName: course-api-gateway
          ContainerPort: 8080
          TargetGroupArn: !Ref TargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - Fn::ImportValue: !Sub ${EcsClusterStack}-default-security-group
          Subnets:
            - !Ref VpcPublicSubnetAId
            - !Ref VpcPublicSubnetBId
      TaskDefinition: !Ref FargateServiceTaskDefinition

  FargateServiceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7


  FargateServiceTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: course-api-gateway
          Essential: true
          Image: !Ref Image
          Environment:
            - Name: SPRING_PROFILES_ACTIVE
              Value: !Ref Environment
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref FargateServiceLogGroup
              awslogs-stream-prefix: course-api-gateway-container
              awslogs-region: !Ref AWS::Region
          PortMappings:
            - ContainerPort: 8080
              HostPort: 8080
              Protocol: tcp
      Cpu: 256
      ExecutionRoleArn: !Ref DefaultRole
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !Ref DefaultRole

  DefaultRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: course-api-gateway-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - ecs.amazonaws.com
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/AmazonECS_FullAccess


Outputs:
  FargateServiceName:
    Description: A reference to the created Fargate Service
    Value: !GetAtt FargateService.Name
    Export:
      Name: !Sub ${AWS::StackName}-fargate-service-name
